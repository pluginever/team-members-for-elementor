{
  "_args": [
    [
      {
        "raw": "grunt-contrib-compress@^1.4.3",
        "scope": null,
        "escapedName": "grunt-contrib-compress",
        "name": "grunt-contrib-compress",
        "rawSpec": "^1.4.3",
        "spec": ">=1.4.3 <2.0.0",
        "type": "range"
      },
      "/Users/manik/sites/everproductslider/wp-content/plugins/team-members-for-elementor"
    ]
  ],
  "_from": "grunt-contrib-compress@>=1.4.3 <2.0.0",
  "_id": "grunt-contrib-compress@1.4.3",
  "_inCache": true,
  "_location": "/grunt-contrib-compress",
  "_nodeVersion": "6.10.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/grunt-contrib-compress-1.4.3.tgz_1495278723311_0.18447509710676968"
  },
  "_npmUser": {
    "name": "xhmikosr",
    "email": "xhmikosr@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "grunt-contrib-compress@^1.4.3",
    "scope": null,
    "escapedName": "grunt-contrib-compress",
    "name": "grunt-contrib-compress",
    "rawSpec": "^1.4.3",
    "spec": ">=1.4.3 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/grunt-contrib-compress/-/grunt-contrib-compress-1.4.3.tgz",
  "_shasum": "01ceffb9c637f52e7081f463750983d0a3b0fa73",
  "_shrinkwrap": null,
  "_spec": "grunt-contrib-compress@^1.4.3",
  "_where": "/Users/manik/sites/everproductslider/wp-content/plugins/team-members-for-elementor",
  "appveyor_id": "tiwbi1smm1j8aa5j",
  "author": {
    "name": "Grunt Team",
    "url": "http://gruntjs.com/"
  },
  "bugs": {
    "url": "https://github.com/gruntjs/grunt-contrib-compress/issues"
  },
  "contributors": [
    {
      "name": "Chris Talkington",
      "url": "http://christalkington.com/"
    },
    {
      "name": "Tyler Kellen",
      "url": "http://goingslowly.com/"
    },
    {
      "name": "Kyle Robinson Young",
      "url": "http://twitter.com/shamakry"
    },
    {
      "name": "Dav Glass",
      "url": "http://blog.davglass.com/"
    }
  ],
  "dependencies": {
    "archiver": "^1.3.0",
    "chalk": "^1.1.1",
    "iltorb": "^1.0.13",
    "lodash": "^4.7.0",
    "pretty-bytes": "^4.0.2",
    "stream-buffers": "^2.1.0"
  },
  "description": "Compress files and folders",
  "devDependencies": {
    "grunt": "^1.0.0",
    "grunt-contrib-clean": "^1.0.0",
    "grunt-contrib-copy": "^1.0.0",
    "grunt-contrib-internal": "^1.1.0",
    "grunt-contrib-jshint": "^1.0.0",
    "grunt-contrib-nodeunit": "^1.0.0",
    "tar": "^2.2.1",
    "unzip": "^0.1.5"
  },
  "directories": {},
  "dist": {
    "shasum": "01ceffb9c637f52e7081f463750983d0a3b0fa73",
    "tarball": "https://registry.npmjs.org/grunt-contrib-compress/-/grunt-contrib-compress-1.4.3.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "tasks"
  ],
  "gitHead": "3c41adf795d9cbe867f49ef1c2d6027039a98019",
  "homepage": "https://github.com/gruntjs/grunt-contrib-compress#readme",
  "keywords": [
    "gruntplugin",
    "compress",
    "zip",
    "tar"
  ],
  "license": "MIT",
  "main": "tasks/compress.js",
  "maintainers": [
    {
      "name": "cowboy",
      "email": "cowboy@rj3.net"
    },
    {
      "name": "jmeas",
      "email": "jellyes2@gmail.com"
    },
    {
      "name": "shama",
      "email": "kyle@dontkry.com"
    },
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    },
    {
      "name": "tkellen",
      "email": "tyler@sleekcode.net"
    },
    {
      "name": "vladikoff",
      "email": "vlad@vladikoff.com"
    },
    {
      "name": "xhmikosr",
      "email": "xhmikosr@gmail.com"
    }
  ],
  "name": "grunt-contrib-compress",
  "optionalDependencies": {
    "iltorb": "^1.0.13"
  },
  "readme": "# grunt-contrib-compress v1.4.3 [![Build Status: Linux](https://travis-ci.org/gruntjs/grunt-contrib-compress.svg?branch=master)](https://travis-ci.org/gruntjs/grunt-contrib-compress) [![Build Status: Windows](https://ci.appveyor.com/api/projects/status/tiwbi1smm1j8aa5j/branch/master?svg=true)](https://ci.appveyor.com/project/gruntjs/grunt-contrib-compress/branch/master)\r\n\r\n> Compress files and folders\r\n\r\n\r\n\r\n## Getting Started\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-contrib-compress --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-contrib-compress');\r\n```\r\n\r\n*This plugin was designed to work with Grunt >= 0.4.x. If you're still using grunt v0.3.x it's strongly recommended that [you upgrade](http://gruntjs.com/upgrading-from-0.3-to-0.4), but in case you can't please use [v0.3.2](https://github.com/gruntjs/grunt-contrib-compress/tree/grunt-0.3-stable).*\r\n\r\n\r\n\r\n## Compress task\r\n_Run this task with the `grunt compress` command._\r\n\r\nTask targets, files and options may be specified according to the grunt [Configuring tasks](http://gruntjs.com/configuring-tasks) guide.\r\n\r\nNode Libraries Used:\r\n[archiver](https://github.com/ctalkington/node-archiver) (for zip/tar)\r\n[zlib](https://nodejs.org/api/zlib.html#zlib_options) (for gzip).\r\n### Options\r\n\r\n#### archive\r\nType: `String` or `Function`  \r\nModes: `zip` `tar`\r\n\r\nThis is used to define where to output the archive. Each target can only have one output file.\r\nIf the type is a Function it must return a String.\r\n\r\n*This option is only appropriate for many-files-to-one compression modes like zip and tar.  For gzip for example, please use grunt's standard src/dest specifications.*\r\n\r\n#### mode\r\nType: `String`\r\n\r\nThis is used to define which mode to use, currently supports `gzip`, `deflate`, `deflateRaw`, `tar`, `tgz` (tar gzip),`zip` and `brotli`.\r\n\r\nAutomatically detected per `dest:src` pair, but can be overridden per target if desired.\r\n\r\n#### level\r\nType: `Integer`  \r\nModes: `zip` `gzip`  \r\nDefault: `1`\r\n\r\nSets the level of archive compression.\r\n\r\n#### brotli\r\nConfigure brotli compression settings:\r\n\r\nType: `Object`  \r\nDefault:\r\n```js\r\n{\r\n  mode: 0,\r\n  quality: 11,\r\n  lgwin: 22,\r\n  lgblock: 0\r\n}\r\n```\r\n\r\n##### mode\r\nType: `Integer`\r\n* `0`: generic mode\r\n* `1`: text mode\r\n* `2`: font mode\r\n\r\nDefault: `0`\r\n\r\n##### quality\r\nControls the compression-speed vs compression-density tradeoffs. The higher the quality, the slower the compression. Range is 0 to 11.\r\n\r\nType: `Integer`  \r\nDefault: `11`\r\n\r\n##### lgwin\r\nBase 2 logarithm of the sliding window size. Range is 10 to 24.\r\n\r\nType: `Integer`  \r\nDefault: `22`\r\n\r\n##### lgblock\r\nBase 2 logarithm of the maximum input block size. Range is 16 to 24. If set to 0, the value will be set based on the quality.  \r\n\r\nType: `Integer`  \r\nDefault: `0`\r\n\r\n#### pretty\r\nType: `Boolean`  \r\nDefault: `false`\r\n\r\nPretty print file sizes when logging.\r\n\r\n#### createEmptyArchive\r\nType: `Boolean`  \r\nDefault: `true`\r\n\r\nThis can be used when you don't want to get an empty archive as a result, if there are no files at the specified paths.\r\n\r\nIt may be useful, if you don't clearly know if files exist and you don't need an empty archive as a result.\r\n\r\n### File Data\r\n\r\nThe following additional keys may be passed as part of a `dest:src` pair when using an Archiver-backed format.\r\nAll keys can be defined as a `Function` that receives the file name and returns in the type specified below.\r\n\r\n#### date\r\nType: `Date`  \r\nModes: `zip` `tar` `tgz`\r\n\r\nSets the file date.\r\n\r\n#### mode\r\nType: `Integer`  \r\nModes: `zip` `tar` `tgz`\r\n\r\nSets the file permissions.\r\n\r\n#### store\r\nType: `Boolean`  \r\nDefault: `false`\r\n\r\nIf true, file contents will be archived without compression.\r\n\r\n#### comment\r\nType: `String`  \r\nModes: `zip`\r\n\r\nSets the file comment.\r\n\r\n#### gid\r\nType: `Integer`  \r\nModes: `tar` `tgz`\r\n\r\nSets the group of the file in the archive\r\n\r\n#### uid\r\nType: `Integer`  \r\nModes: `tar` `tgz`\r\n\r\nSets the user of the file in the archive\r\n\r\n### Usage Examples\r\n\r\n```js\r\n// make a zipfile\r\ncompress: {\r\n  main: {\r\n    options: {\r\n      archive: 'archive.zip'\r\n    },\r\n    files: [\r\n      {src: ['path/*'], dest: 'internal_folder/', filter: 'isFile'}, // includes files in path\r\n      {src: ['path/**'], dest: 'internal_folder2/'}, // includes files in path and its subdirs\r\n      {expand: true, cwd: 'path/', src: ['**'], dest: 'internal_folder3/'}, // makes all src relative to cwd\r\n      {flatten: true, src: ['path/**'], dest: 'internal_folder4/', filter: 'isFile'} // flattens results to a single level\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\n```js\r\n// gzip assets 1-to-1 for production\r\ncompress: {\r\n  main: {\r\n    options: {\r\n      mode: 'gzip'\r\n    },\r\n    expand: true,\r\n    cwd: 'assets/',\r\n    src: ['**/*'],\r\n    dest: 'public/'\r\n  }\r\n}\r\n```\r\n\r\n```js\r\n// compress a file to a different location than its source\r\n// example compresses path/the_file to /the_file inside archive.zip\r\ncompress: {\r\n  main: {\r\n    options: {\r\n      archive: 'archive.zip'\r\n    },\r\n    files: [{\r\n      expand: true,\r\n      cwd: 'path/',\r\n      src: ['the_file'],\r\n      dest: '/'\r\n    }]\r\n  }\r\n},\r\n```\r\n\r\n```js\r\n// use custom extension for the output file\r\ncompress: {\r\n  main: {\r\n    options: {\r\n      mode: 'gzip'\r\n    },\r\n    // Each of the files in the src/ folder will be output to\r\n    // the dist/ folder each with the extension .gz.js\r\n    files: [{\r\n      expand: true,\r\n      src: ['src/*.js'],\r\n      dest: 'dist/',\r\n      ext: '.gz.js'\r\n    }]\r\n  }\r\n}\r\n\r\n```\r\n```js\r\n// use a function to return the output file\r\ncompress: {\r\n  main: {\r\n    options: {\r\n      archive: function () {\r\n        // The global value git.tag is set by another task\r\n        return git.tag + '.zip'\r\n      }\r\n    },\r\n    files: [{\r\n      expand: true,\r\n      src: ['src/*.js'],\r\n      dest: 'dist/'\r\n    }]\r\n  }\r\n}\r\n```\r\n\r\n```js\r\n// brotlify assets 1-to-1 for production using default options\r\ncompress: {\r\n  main: {\r\n    options: {\r\n      mode: 'brotli'\r\n    },\r\n    expand: true,\r\n    cwd: 'assets/',\r\n    src: ['**/*.js'],\r\n    dest: 'public/',\r\n    extDot: 'last',\r\n    ext: '.js.br'\r\n  }\r\n}\r\n```\r\n\r\n```js\r\n// brotlify assets 1-to-1 for production specifying text mode\r\n// and using default options otherwise\r\ncompress: {\r\n  main: {\r\n    options: {\r\n      mode: 'brotli',\r\n      brotli: {\r\n        mode: 1\r\n      }\r\n    },\r\n    expand: true,\r\n    cwd: 'assets/',\r\n    src: ['**/*.js'],\r\n    dest: 'public/',\r\n    extDot: 'last',\r\n    ext: '.js.br'\r\n  }\r\n}\r\n```\r\n\r\n\r\n## Release History\r\n\r\n * 2017-05-20   v1.4.3   Update pretty-bytes to v4.0.2. Add option to not to create empty archive.\r\n * 2017-05-20   v1.4.2   Update archiver to v1.3.0.\r\n * 2017-01-20   v1.4.1   Make brotli support optional.\r\n * 2017-01-18   v1.4.0   Add support for brotli.\r\n * 2016-05-24   v1.3.0   Update archiver to v1.0. Fix node 6 support.\r\n * 2016-03-24   v1.2.0   Dependency update.\r\n * 2016-03-08   v1.1.1   Fix verbose output.\r\n * 2016-03-04   v1.1.0   Add ability to replace file in the same location.\r\n * 2016-02-15   v1.0.0   Update archiver, chalk and pretty-bytes.\r\n * 2015-10-23   v0.14.0   Change to verbose output. Dependency updates archiver 0.16.\r\n * 2014-12-25   v0.13.0   Update archiver to v0.13. Small fixes.\r\n * 2014-09-23   v0.12.0   Output update. Prevent zipping dot files and allow for forcing through `fail.warn` within loop.\r\n * 2014-08-26   v0.11.0   Update archiver to v0.11.0.\r\n * 2014-07-14   v0.10.0   Don't apply extensions automatically (use `ext` or `rename`).\r\n * 2014-05-20   v0.9.1   Allow directories to pass-through to archiver via filter.\r\n * 2014-05-20   v0.9.0   Update archiver to v0.9.0.\r\n * 2014-04-09   v0.8.0   Update archiver to v0.8.0.\r\n * 2014-02-17   v0.7.0   Update archiver to v0.6.0.\r\n * 2014-01-12   v0.6.0   Update archiver to v0.5.0.\r\n * 2013-11-27   v0.5.3   Allow archive option to be a function.\r\n * 2013-06-03   v0.5.2   Allow custom extensions using the `ext` option.\r\n * 2013-05-28   v0.5.1   Avoid gzip on folders.\r\n * 2013-04-23   v0.5.0   Add support for `deflate` and `deflateRaw`.\r\n * 2013-04-15   v0.4.10   Fix issue where task finished before all data was compressed.\r\n * 2013-04-09   v0.4.9   Bump Archiver version.\r\n * 2013-04-07   v0.4.8   Open streams lazily to avoid too many open files.\r\n * 2013-04-01   v0.4.7   Pipe gzip to fix gzip issues. Add tests that undo compressed files to test.\r\n * 2013-03-25   v0.4.6   Fix Node.js v0.8 compatibility issue with gzip.\r\n * 2013-03-20   v0.4.5   Update to archiver 0.4.1 Fix issue with gzip failing intermittently.\r\n * 2013-03-19   v0.4.4   Fixes for Node.js v0.10. Explicitly call `grunt.file` methods with `map` and `filter`.\r\n * 2013-03-14   v0.4.3   Fix for gzip; continue iteration on returning early.\r\n * 2013-03-13   v0.4.2   Refactor task like other contrib tasks. Fix gzip of multiple files. Remove unused dependencies.\r\n * 2013-02-22   v0.4.1   Pretty print compressed sizes. Logging each addition to a compressed file now only happens in verbose mode.\r\n * 2013-02-15   v0.4.0   First official release for Grunt 0.4.0.\r\n * 2013-01-23   v0.4.0rc7   Updating grunt/gruntplugin dependencies to rc7. Changing in-development grunt/gruntplugin dependency versions from tilde version ranges to specific versions.\r\n * 2013-01-14   v0.4.0rc5   Updating to work with grunt v0.4.0rc5. Conversion to grunt v0.4 conventions. Replace `basePath` with `cwd`.\r\n * 2012-10-12   v0.3.2   Rename grunt-contrib-lib dep to grunt-lib-contrib.\r\n * 2012-10-09   v0.3.1   Replace zipstream package with archiver.\r\n * 2012-09-24   v0.3.0   General cleanup. Options no longer accepted from global config key.\r\n * 2012-09-18   v0.2.2   Test refactoring. No valid source check. Automatic mode detection.\r\n * 2012-09-10   v0.2.0   Refactored from grunt-contrib into individual repo.\r\n\r\n---\r\n\r\nTask submitted by [Chris Talkington](http://christalkington.com/)\r\n\r\n*This file was generated on Sat May 20 2017 14:05:16.*\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gruntjs/grunt-contrib-compress.git"
  },
  "scripts": {
    "test": "grunt test"
  },
  "version": "1.4.3"
}
