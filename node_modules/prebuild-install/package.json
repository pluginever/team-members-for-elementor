{
  "_args": [
    [
      {
        "raw": "prebuild-install@^2.3.0",
        "scope": null,
        "escapedName": "prebuild-install",
        "name": "prebuild-install",
        "rawSpec": "^2.3.0",
        "spec": ">=2.3.0 <3.0.0",
        "type": "range"
      },
      "/Users/manik/sites/everproductslider/wp-content/plugins/team-members-for-elementor/node_modules/iltorb"
    ]
  ],
  "_from": "prebuild-install@>=2.3.0 <3.0.0",
  "_id": "prebuild-install@2.5.1",
  "_inCache": true,
  "_location": "/prebuild-install",
  "_nodeVersion": "9.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/prebuild-install_2.5.1_1518132396777_0.9687993737822158"
  },
  "_npmUser": {
    "name": "ralphtheninja",
    "email": "ralphtheninja@riseup.net"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "prebuild-install@^2.3.0",
    "scope": null,
    "escapedName": "prebuild-install",
    "name": "prebuild-install",
    "rawSpec": "^2.3.0",
    "spec": ">=2.3.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/iltorb"
  ],
  "_resolved": "https://registry.npmjs.org/prebuild-install/-/prebuild-install-2.5.1.tgz",
  "_shasum": "0f234140a73760813657c413cdccdda58296b1da",
  "_shrinkwrap": null,
  "_spec": "prebuild-install@^2.3.0",
  "_where": "/Users/manik/sites/everproductslider/wp-content/plugins/team-members-for-elementor/node_modules/iltorb",
  "author": {
    "name": "Mathias Buus",
    "url": "@mafintosh"
  },
  "bin": {
    "prebuild-install": "./bin.js"
  },
  "bugs": {
    "url": "https://github.com/mafintosh/prebuild-install/issues"
  },
  "contributors": [
    {
      "name": "Julian Gruber",
      "email": "julian@juliangruber.com",
      "url": "https://github.com/juliangruber"
    },
    {
      "name": "Brett Lawson",
      "email": "brett19@gmail.com",
      "url": "https://github.com/brett19"
    },
    {
      "name": "Pieter Hintjens",
      "email": "ph@imatix.com",
      "url": "https://github.com/hintjens"
    },
    {
      "name": "Lars-Magnus Skog",
      "email": "ralphtheninja@riseup.net",
      "url": "https://github.com/ralphtheninja"
    },
    {
      "name": "Jesús Leganés Combarro",
      "email": "piranna@gmail.com",
      "url": "https://github.com/piranna"
    },
    {
      "name": "Mathias Küsel",
      "email": "mathiask@hotmail.de",
      "url": "https://github.com/mathiask88"
    },
    {
      "name": "Lukas Geiger",
      "email": "lukas.geiger94@gmail.com",
      "url": "https://github.com/lgeiger"
    }
  ],
  "dependencies": {
    "detect-libc": "^1.0.3",
    "expand-template": "^1.0.2",
    "github-from-package": "0.0.0",
    "minimist": "^1.2.0",
    "mkdirp": "^0.5.1",
    "node-abi": "^2.2.0",
    "noop-logger": "^0.1.1",
    "npmlog": "^4.0.1",
    "os-homedir": "^1.0.1",
    "pump": "^2.0.1",
    "rc": "^1.1.6",
    "simple-get": "^2.7.0",
    "tar-fs": "^1.13.0",
    "tunnel-agent": "^0.6.0",
    "which-pm-runs": "^1.0.0"
  },
  "description": "A command line tool for easily install prebuilds for multiple version of node/iojs on a specific platform",
  "devDependencies": {
    "a-native-module": "^1.0.0",
    "nsp": "^2.3.0",
    "rimraf": "^2.5.2",
    "standard": "^10.0.3",
    "tape": "^4.5.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-3DX9L6pzwc1m1ksMkW3Ky2WLgPQUBiySOfXVl3WZyAeJSyJb4wtoH9OmeRGcubAWsMlLiL8BTHbwfm/jPQE9Ag==",
    "shasum": "0f234140a73760813657c413cdccdda58296b1da",
    "tarball": "https://registry.npmjs.org/prebuild-install/-/prebuild-install-2.5.1.tgz",
    "fileCount": 13,
    "unpackedSize": 18959
  },
  "gitHead": "00187177601745a2d9a6eb7bfa5c385ad976ca12",
  "homepage": "https://github.com/mafintosh/prebuild-install",
  "keywords": [
    "prebuilt",
    "binaries",
    "native",
    "addon",
    "module",
    "c",
    "c++",
    "bindings",
    "devops"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "mafintosh",
      "email": "mathiasbuus@gmail.com"
    },
    {
      "name": "piranna",
      "email": "piranna@gmail.com"
    },
    {
      "name": "ralphtheninja",
      "email": "ralphtheninja@riseup.net"
    }
  ],
  "name": "prebuild-install",
  "optionalDependencies": {},
  "readme": "# prebuild-install\n\n[![Build Status](https://travis-ci.org/prebuild/prebuild-install.svg?branch=master)](https://travis-ci.org/prebuild/prebuild-install)\n[![Build status](https://ci.appveyor.com/api/projects/status/6v6hxxwgjrr99pc8/branch/master?svg=true)](https://ci.appveyor.com/project/mathiask88/prebuild-install)\n[![david](https://david-dm.org/prebuild/prebuild-install.svg)](https://david-dm.org/prebuild/prebuild-install)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com/)\n\n> A command line tool for easily install prebuilds for multiple version of node/iojs on a specific platform.\n\n`prebuild-install` supports installing prebuilt binaries from GitHub by default.\n\n## Usage\n\nChange your package.json install script to:\n```\n...\n  \"scripts\": {\n    \"install\": \"prebuild-install || node-gyp rebuild\"\n  }\n...\n```\n\n### Requirements\n\nYou need to provide prebuilds made by [prebuild](https://github.com/mafintosh/prebuild).\n\n### Help\n```\nprebuild-install [options]\n\n  --download    -d  [url]       (download prebuilds, no url means github)\n  --target      -t  version     (version to install for)\n  --runtime     -r  runtime     (Node runtime [node or electron] to build or install for, default is node)\n  --path        -p  path        (make a prebuild-install here)\n  --build-from-source           (skip prebuild download)\n  --verbose                     (log verbosely)\n  --libc                        (use provided libc rather than system default)\n  --debug                       (set Debug or Release configuration)\n  --version                     (print prebuild-install version and exit)\n ```\n\nWhen `prebuild-install` is run via an `npm` script, options\n`--build-from-source`, `--debug` and `--download`, may be passed through via\narguments given to the `npm` command.\n\n### Custom binaries\nThe end user can override binary download location through environment variables in their .npmrc file.\nThe variable needs to meet the mask `% your package name %_binary_host` or `% your package name %_binary_host_mirror`. For example:\n```\nleveldown_binary_host=http://overriden-host.com/overriden-path\n```\nNote that the package version subpath and file name will still be appended.\nSo if you are installing `leveldown@1.2.3` the resulting url will be:\n```\nhttp://overriden-host.com/overriden-path/v1.2.3/leveldown-v1.2.3-node-v57-win32-x64.tar.gz\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mafintosh/prebuild-install.git"
  },
  "scripts": {
    "audit": "nsp check",
    "lint": "standard",
    "test": "tape test/*-test.js && npm run audit && npm run lint"
  },
  "version": "2.5.1"
}
